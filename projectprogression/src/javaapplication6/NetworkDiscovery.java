package javaapplication6;

import java.io.IOException;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;

public class NetworkDiscovery extends javax.swing.JPanel {

    /**
     * Creates new form NetworkDiscovery
     */
    UtilitiesFunctions utl = new UtilitiesFunctions();

    public NetworkDiscovery() {
        initComponents();
        if (startButtonNetworkWatcher.isEnabled()) {
            stopButtonNetworkWatcher.setEnabled(false);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerPanelNetworkWatcher = new javax.swing.JPanel();
        startButtonNetworkWatcher = new javax.swing.JButton();
        stopButtonNetworkWatcher = new javax.swing.JButton();
        bodyPanelNetworkWatcher = new javax.swing.JPanel();
        scrollPaneNetworkWatcher = new javax.swing.JScrollPane();
        tableNetworkWatcher = new javax.swing.JTable();

        headerPanelNetworkWatcher.setBackground(new java.awt.Color(0, 0, 0));
        headerPanelNetworkWatcher.setForeground(new java.awt.Color(255, 255, 255));

        startButtonNetworkWatcher.setText("Start");
        startButtonNetworkWatcher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonNetworkWatcherActionPerformed(evt);
            }
        });

        stopButtonNetworkWatcher.setText("Stop");
        stopButtonNetworkWatcher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonNetworkWatcherActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout headerPanelNetworkWatcherLayout = new javax.swing.GroupLayout(headerPanelNetworkWatcher);
        headerPanelNetworkWatcher.setLayout(headerPanelNetworkWatcherLayout);
        headerPanelNetworkWatcherLayout.setHorizontalGroup(
            headerPanelNetworkWatcherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelNetworkWatcherLayout.createSequentialGroup()
                .addComponent(startButtonNetworkWatcher)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stopButtonNetworkWatcher)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        headerPanelNetworkWatcherLayout.setVerticalGroup(
            headerPanelNetworkWatcherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelNetworkWatcherLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(headerPanelNetworkWatcherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startButtonNetworkWatcher)
                    .addComponent(stopButtonNetworkWatcher))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        tableNetworkWatcher.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IP"
            }
        ));
        scrollPaneNetworkWatcher.setViewportView(tableNetworkWatcher);

        javax.swing.GroupLayout bodyPanelNetworkWatcherLayout = new javax.swing.GroupLayout(bodyPanelNetworkWatcher);
        bodyPanelNetworkWatcher.setLayout(bodyPanelNetworkWatcherLayout);
        bodyPanelNetworkWatcherLayout.setHorizontalGroup(
            bodyPanelNetworkWatcherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPaneNetworkWatcher, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
        );
        bodyPanelNetworkWatcherLayout.setVerticalGroup(
            bodyPanelNetworkWatcherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanelNetworkWatcherLayout.createSequentialGroup()
                .addComponent(scrollPaneNetworkWatcher, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerPanelNetworkWatcher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bodyPanelNetworkWatcher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(headerPanelNetworkWatcher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bodyPanelNetworkWatcher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonNetworkWatcherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonNetworkWatcherActionPerformed
        try {
            utl.showNetworkDeviceList();
            // TODO add your handling code here:
        } catch (UnknownHostException ex) {
        } catch (SocketException ex) {
        } catch (IOException ex) {
        } catch (InterruptedException ex) {
            Logger.getLogger(NetworkDiscovery.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_startButtonNetworkWatcherActionPerformed

    private void stopButtonNetworkWatcherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonNetworkWatcherActionPerformed
        utl.clearNetworkDeviceList();
        // TODO add your handling code here:
    }//GEN-LAST:event_stopButtonNetworkWatcherActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bodyPanelNetworkWatcher;
    private javax.swing.JPanel headerPanelNetworkWatcher;
    private javax.swing.JScrollPane scrollPaneNetworkWatcher;
    public static javax.swing.JButton startButtonNetworkWatcher;
    public static javax.swing.JButton stopButtonNetworkWatcher;
    public static javax.swing.JTable tableNetworkWatcher;
    // End of variables declaration//GEN-END:variables

}
