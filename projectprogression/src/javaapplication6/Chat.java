package javaapplication6;

import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.InetAddress;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

public class Chat extends javax.swing.JPanel {

    public static String host;
    public static String port;
    private final javaapplication6.UtilitiesFunctions utl = new UtilitiesFunctions();
    private String writtenText;
    private String line;
    private BufferedReader br;
    private int portint;
    private InetAddress ourhost;
    private String sentence;
    private Socket clientSocket;
    private DataOutputStream outToServer;

    public Chat() {
        initComponents();
        if (msgshowingAreabodyPanellChat.getText().equals("")) {
            clearButtonheaderPanelChat.hide();
        } else {
            clearButtonheaderPanelChat.show();
        }
        checkTextPresent ctp = new checkTextPresent(msgshowingAreabodyPanellChat, clearButtonheaderPanelChat);
        sendButtonbodyPanellChat.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerPanelChat = new javax.swing.JPanel();
        serverNameheaderPanelChat = new javax.swing.JLabel();
        iptextFieldheaderPanelChat = new javax.swing.JTextField();
        porttextFieldheaderPanelChat = new javax.swing.JTextField();
        startButtonheaderPanelChat = new javax.swing.JButton();
        stopButtonheaderPanelChat = new javax.swing.JButton();
        clearButtonheaderPanelChat = new javax.swing.JButton();
        bodyPanellChat = new javax.swing.JPanel();
        msgShowingscrollPanebodyPanellChat = new javax.swing.JScrollPane();
        msgshowingAreabodyPanellChat = new javax.swing.JTextArea();
        msgWritingscrollPanebodyPanellChat = new javax.swing.JScrollPane();
        msgwritingAreabodyPanellChat = new javax.swing.JTextArea();
        sendButtonbodyPanellChat = new javax.swing.JButton();

        headerPanelChat.setBackground(new java.awt.Color(0, 0, 0));
        headerPanelChat.setForeground(new java.awt.Color(255, 255, 255));

        serverNameheaderPanelChat.setForeground(new java.awt.Color(255, 255, 255));
        serverNameheaderPanelChat.setText("Enter IP and Port");

        iptextFieldheaderPanelChat.setText("127.0.0.1");
        iptextFieldheaderPanelChat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iptextFieldheaderPanelChatMouseClicked(evt);
            }
        });
        iptextFieldheaderPanelChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iptextFieldheaderPanelChatActionPerformed(evt);
            }
        });

        porttextFieldheaderPanelChat.setText("12345");
        porttextFieldheaderPanelChat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                porttextFieldheaderPanelChatMouseClicked(evt);
            }
        });

        startButtonheaderPanelChat.setText("Start");
        startButtonheaderPanelChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonheaderPanelChatActionPerformed(evt);
            }
        });

        stopButtonheaderPanelChat.setText("Stop");
        stopButtonheaderPanelChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonheaderPanelChatActionPerformed(evt);
            }
        });

        clearButtonheaderPanelChat.setText("Clear");
        clearButtonheaderPanelChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonheaderPanelChatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout headerPanelChatLayout = new javax.swing.GroupLayout(headerPanelChat);
        headerPanelChat.setLayout(headerPanelChatLayout);
        headerPanelChatLayout.setHorizontalGroup(
            headerPanelChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelChatLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(serverNameheaderPanelChat, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(iptextFieldheaderPanelChat, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(porttextFieldheaderPanelChat, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(startButtonheaderPanelChat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stopButtonheaderPanelChat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clearButtonheaderPanelChat)
                .addGap(96, 96, 96))
        );
        headerPanelChatLayout.setVerticalGroup(
            headerPanelChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelChatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(headerPanelChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serverNameheaderPanelChat)
                    .addComponent(iptextFieldheaderPanelChat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(porttextFieldheaderPanelChat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startButtonheaderPanelChat)
                    .addComponent(stopButtonheaderPanelChat)
                    .addComponent(clearButtonheaderPanelChat))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        msgshowingAreabodyPanellChat.setColumns(20);
        msgshowingAreabodyPanellChat.setRows(5);
        msgShowingscrollPanebodyPanellChat.setViewportView(msgshowingAreabodyPanellChat);

        msgwritingAreabodyPanellChat.setColumns(20);
        msgwritingAreabodyPanellChat.setRows(5);
        msgwritingAreabodyPanellChat.setText("Hello Server?");
        msgwritingAreabodyPanellChat.setPreferredSize(new java.awt.Dimension(162, 90));
        msgWritingscrollPanebodyPanellChat.setViewportView(msgwritingAreabodyPanellChat);

        sendButtonbodyPanellChat.setText("Send");
        sendButtonbodyPanellChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonbodyPanellChatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bodyPanellChatLayout = new javax.swing.GroupLayout(bodyPanellChat);
        bodyPanellChat.setLayout(bodyPanellChatLayout);
        bodyPanellChatLayout.setHorizontalGroup(
            bodyPanellChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanellChatLayout.createSequentialGroup()
                .addComponent(msgWritingscrollPanebodyPanellChat, javax.swing.GroupLayout.PREFERRED_SIZE, 724, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendButtonbodyPanellChat)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(bodyPanellChatLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(msgShowingscrollPanebodyPanellChat, javax.swing.GroupLayout.PREFERRED_SIZE, 854, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bodyPanellChatLayout.setVerticalGroup(
            bodyPanellChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyPanellChatLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(msgShowingscrollPanebodyPanellChat, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(bodyPanellChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bodyPanellChatLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(sendButtonbodyPanellChat)
                        .addContainerGap(53, Short.MAX_VALUE))
                    .addGroup(bodyPanellChatLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(msgWritingscrollPanebodyPanellChat)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerPanelChat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(bodyPanellChat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(headerPanelChat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bodyPanellChat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void iptextFieldheaderPanelChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iptextFieldheaderPanelChatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iptextFieldheaderPanelChatActionPerformed

    private void iptextFieldheaderPanelChatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iptextFieldheaderPanelChatMouseClicked
        iptextFieldheaderPanelChat.setText("");
    }//GEN-LAST:event_iptextFieldheaderPanelChatMouseClicked

    private void porttextFieldheaderPanelChatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_porttextFieldheaderPanelChatMouseClicked
        porttextFieldheaderPanelChat.setText("");
    }//GEN-LAST:event_porttextFieldheaderPanelChatMouseClicked

    private void stopButtonheaderPanelChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonheaderPanelChatActionPerformed
        try {
            clientSocket.close();
        } catch (IOException ex) {
            Logger.getLogger(Chat.class.getName()).log(Level.SEVERE, null, ex);
        }

        utl.showButton(javaapplication6.Chat.startButtonheaderPanelChat);
        utl.repaintandvalidate(javaapplication6.Chat.startButtonheaderPanelChat);
        utl.hideButton(javaapplication6.Chat.stopButtonheaderPanelChat);
        utl.repaintandvalidate(javaapplication6.Chat.stopButtonheaderPanelChat);
        utl.disableButton(javaapplication6.Chat.sendButtonbodyPanellChat);
    }//GEN-LAST:event_stopButtonheaderPanelChatActionPerformed

    private void clearButtonheaderPanelChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonheaderPanelChatActionPerformed
        ClientclearActionPerformed(evt);
    }//GEN-LAST:event_clearButtonheaderPanelChatActionPerformed

    private void startButtonheaderPanelChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonheaderPanelChatActionPerformed
        port = porttextFieldheaderPanelChat.getText();
        host = iptextFieldheaderPanelChat.getText();

//        check userinput port value whether it is number first and then if it is out of range 
        if (utl.isInteger(port)) {
            if (utl.isOutOfRange(port)) {
                portint = Integer.parseInt(port);
                try {
                    clientSocket = new Socket(host, portint);
                } catch (IOException ex) {
                    Logger.getLogger(Chat.class.getName()).log(Level.SEVERE, null, ex);
                }
//                listener for server
                SocketAcceptandListener sat = new SocketAcceptandListener(clientSocket, msgshowingAreabodyPanellChat);
                sat.start();

                try {
                    br = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
                } catch (IOException ex) {
                    Logger.getLogger(Chat.class.getName()).log(Level.SEVERE, null, ex);
                }
                sendButtonbodyPanellChat.setEnabled(true);
                utl.repaintandvalidate(sendButtonbodyPanellChat);
            }
        }
    }//GEN-LAST:event_startButtonheaderPanelChatActionPerformed

    private void sendButtonbodyPanellChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonbodyPanellChatActionPerformed
        try {
            outToServer = new DataOutputStream(clientSocket.getOutputStream());
        } catch (IOException ex) {
            Logger.getLogger(Chat.class.getName()).log(Level.SEVERE, null, ex);
        }
        sentence = msgwritingAreabodyPanellChat.getText();
        try {
            outToServer.writeBytes(sentence + '\n');
        } catch (IOException ex) {
            Logger.getLogger(Chat.class.getName()).log(Level.SEVERE, null, ex);
        }
//        also write to own msgshowing text area
        msgshowingAreabodyPanellChat.append("Own PC :: " + sentence + "\n");
        msgwritingAreabodyPanellChat.setText(null);
    }//GEN-LAST:event_sendButtonbodyPanellChatActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bodyPanellChat;
    public static javax.swing.JButton clearButtonheaderPanelChat;
    private javax.swing.JPanel headerPanelChat;
    public static javax.swing.JTextField iptextFieldheaderPanelChat;
    private javax.swing.JScrollPane msgShowingscrollPanebodyPanellChat;
    private javax.swing.JScrollPane msgWritingscrollPanebodyPanellChat;
    public static javax.swing.JTextArea msgshowingAreabodyPanellChat;
    public static javax.swing.JTextArea msgwritingAreabodyPanellChat;
    public static javax.swing.JTextField porttextFieldheaderPanelChat;
    public static javax.swing.JButton sendButtonbodyPanellChat;
    private javax.swing.JLabel serverNameheaderPanelChat;
    public static javax.swing.JButton startButtonheaderPanelChat;
    public static javax.swing.JButton stopButtonheaderPanelChat;
    // End of variables declaration//GEN-END:variables

    private void ClientclearActionPerformed(ActionEvent evt) {
        msgshowingAreabodyPanellChat.setText(null);
    }
}
